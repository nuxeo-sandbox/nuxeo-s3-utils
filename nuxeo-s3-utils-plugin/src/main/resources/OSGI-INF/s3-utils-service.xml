<?xml version="1.0"?>
<component name="org.nuxeo.s3utils.service">

	<documentation>
		Dispatch the handling to the appropriate S3Handler.
	</documentation>

	<implementation class="org.nuxeo.s3utils.S3HandlerServiceImpl" />

	<service>
		<provide interface="org.nuxeo.s3utils.S3HandlerService" />
	</service>

	<extension-point name="configuration">
		<documentation>
			Extension points to register S3Handlers.
		</documentation>
		<object class="org.nuxeo.s3utils.S3HandlerDescriptor" />
	</extension-point>

	<!-- Default handler -->
	<extension target="org.nuxeo.s3utils.service" point="configuration">
		<s3Handler>
			<name>default</name>
			<class>org.nuxeo.s3utils.S3HandlerImpl</class>
            <region>${nuxeo.aws.s3utils.region:=}</region>
			<bucket>${nuxeo.aws.s3utils.bucket:=}</bucket>
			<tempSignedUrlDuration>${nuxeo.aws.s3utils.duration:=}
			</tempSignedUrlDuration>
			<useCacheForExistsKey>${nuxeo.aws.s3utils.use_cache_for_exists_key:=}</useCacheForExistsKey>
      
            <!-- No values => Use the default AWS SDK config (com.amazonaws.services.s3.transfer.TransferManagerConfiguration) -->
            <!-- Here, we set the values as the default values for the current AWS SDK -->
            <!-- 5MB (5242880) -->
            <minimumUploadPartSize>${nuxeo.aws.s3utils.minimumUploadPartSize:=}</minimumUploadPartSize>
            <!-- 16MB (16777216) -->
            <multipartUploadThreshold>${nuxeo.aws.s3utils.multipartUploadThreshold:=}</multipartUploadThreshold>
		</s3Handler>
	</extension>

</component>
